(normal-top-level-add-to-load-path '("/usr/share/emacs23/site-lisp/cedet-common") )
(normal-top-level-add-to-load-path '("~/.elisp/") )
(normal-top-level-add-to-load-path '("~/.elisp/template/lisp/") )
(normal-top-level-add-to-load-path '("~/.elisp/babel") )
(normal-top-level-add-to-load-path '("~/.elisp/csharpmode-read-only/"))
(normal-top-level-add-to-load-path '("~/.elisp/google-maps/") )
(normal-top-level-add-to-load-path '("~/.elisp/nav") )
(normal-top-level-add-to-load-path '("~/.elisp/rainbow/"))
(normal-top-level-add-to-load-path '("~/.elisp/textmate.el") )
(normal-top-level-add-to-load-path '("~/.elisp/theme-roller.el/") )
(normal-top-level-add-to-load-path '("~/.elisp/theme-roller.el/themes/") )
(normal-top-level-add-to-load-path '("~/.elisp/themes/") )
(normal-top-level-add-to-load-path '("~/.elisp/org-mode/lisp/") )
(normal-top-level-add-to-load-path '("~/.elisp/org-mode/contrib/lisp/") )
(normal-top-level-add-to-load-path '("~/.elisp/pde/lisp/") )
(normal-top-level-add-to-load-path '("~/.elisp/kde-emacs/") )

(setq load-path (cons "~/.elisp/org-mode/lisp" load-path))
(setq load-path (cons "~/.elisp/org-mode/contrib/lisp" load-path))
(add-to-list 'load-path "~/dev/general/org-mode/lisp")
(add-to-list 'load-path "~/dev/general/org-mode/contrib/lisp")

(load "~/.elisp/rc/emacs-rc-auto-insert.el")
(load "~/.elisp/rc/emacs-rc-autocomplete.el")
(load "~/.elisp/rc/emacs-rc-ccmode.el")
(load "~/.elisp/rc/emacs-rc-cmake.el")
(load "~/.elisp/rc/emacs-rc-common-hooks.el")
(load "~/.elisp/rc/emacs-rc-decor.el")
(load "~/.elisp/rc/emacs-rc-doxygen.el")
(load "~/.elisp/rc/emacs-rc-ecb.el")
(load "~/.elisp/rc/emacs-rc-elisp.el")
(load "~/.elisp/rc/emacs-rc-erc.el")
(load "~/.elisp/rc/emacs-rc-gdb.el")
(load "~/.elisp/rc/emacs-rc-git.el")
(load "~/.elisp/rc/emacs-rc-info.el")
(load "~/.elisp/rc/emacs-rc-ispell.el")
(load "~/.elisp/rc/emacs-rc-iswitchb.el")
(load "~/.elisp/rc/emacs-rc-javascript.el")
(load "~/.elisp/rc/emacs-rc-keydefs.el")
(load "~/.elisp/rc/emacs-rc-lisp.el")
(load "~/.elisp/rc/emacs-rc-mail.el")
(load "~/.elisp/rc/emacs-rc-misc-things.el")
(load "~/.elisp/rc/emacs-rc-newsticker.el")
(load "~/.elisp/rc/emacs-rc-org-mode.el")
(load "~/.elisp/rc/emacs-rc-osd.el")
(load "~/.elisp/rc/emacs-rc-outlinemode.el")
(load "~/.elisp/rc/emacs-rc-perl.el")
(load "~/.elisp/rc/emacs-rc-pretty-lambda.el")
(load "~/.elisp/rc/emacs-rc-prog-misc.el")
(load "~/.elisp/rc/emacs-rc-remember.el")
(load "~/.elisp/rc/emacs-rc-scheme.el")
(load "~/.elisp/rc/emacs-rc-screen.el")
(load "~/.elisp/rc/emacs-rc-sdcv.el")
(load "~/.elisp/rc/emacs-rc-sh-mode.el")
(load "~/.elisp/rc/emacs-rc-supercite.el")
(load "~/.elisp/rc/emacs-rc-timeclock.el")
(load "~/.elisp/rc/emacs-rc-tramp.el")
(load "~/.elisp/rc/emacs-rc-vcs-misc.el")
(load "~/.elisp/rc/emacs-rc-vm.el")
(load "~/.elisp/rc/emacs-rc-w3.el")
(load "~/.elisp/rc/emacs-rc-w3m.el")
(load "~/.elisp/rc/emacs-rc-yasnippet.el")
(load "~/.elisp/textmate.el/textmate.el")
(load "~/.elisp/uptime.el")
(load "~/.elisp/outline-easy.el")
;; (load "~/.elisp/rc/emacs-rc-bbdb.el")
;; (load "~/.elisp/rc/emacs-rc-cedet.el")
;; (load "~/.elisp/rc/emacs-rc-clojure.el")
;; (load "~/.elisp/rc/emacs-rc-dvc.el")
;; (load "~/.elisp/rc/emacs-rc-eblogger.el")
;; (load "~/.elisp/rc/emacs-rc-epg.el") ;;
;; (load "~/.elisp/rc/emacs-rc-flymake.el")
;; (load "~/.elisp/rc/emacs-rc-jabber.el")
;; (load "~/.elisp/rc/emacs-rc-mailcrypt.el")
;; (load "~/.elisp/rc/emacs-rc-nxml.el")
;; (load "~/.elisp/rc/emacs-rc-server.el")
;; (load "~/.elisp/rc/emacs-rc-slime.el")
(load "~/.elisp/rc/emacs-rc-tex.el")
;; (load "~/.elisp/rc/emacs-rc-wikis.el")

(require 'babel)
(require 'csharp-mode)
(require 'dirvars)
(require 'full-ack)
(require 'google-maps)
(require 'lua-mode)
(require 'man-completion)
(require 'mocp)
(require 'multi-mode)
(require 'multi-term)
(require 'nav)
(require 'pastebin)
(require 'rainbow-mode)
(require 'textmate)
(require 'tfs)
(require 'w3m)
(require 'org-install)
(require 'kde-emacs)

; (require 'theme-roller)
;; (require 'aspx-mode)
;; (require 'csharp-completion)
;; (require 'csharp-shell)
;; (require 'flymake-for-csharp)
;; (require 'vm-autoloads)

(custom-set-variables
  ;; If there is more than one, they won't work right.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; custom-set-variables was added by Custom.
 '(canlock-password "647dc58dfe29df3e23118aaabef8f78aa113039e")
 '(column-number-mode t)
 '(font-lock-mode t)
 '(cua-mode t nil (cua-base))
 '(develock-auto-enable nil)
 '(develock-max-column-plist nil)
 '(initial-scratch-message (shell-command-to-string "cat ~/.scratch.el"))
 '(message-courtesy-message nil)
 '(message-dont-reply-to-names nil)
 '(message-reply-to-function nil)
 '(mml-default-directory nil)
 '(mocp-theme "transparent-background")
 '(multi-term-program "/bin/bash")
 '(nav-quickdir-list (list "~/" "~/devel/trunk" "~/devel/branch" "~/devel/trunk/emacs-configs/rc" "~/.emacs.d"))
 '(nav-quickfile-list (list "~/.emacs" "~/.bash_alias" "~/.bashrc"))
 '(nav-width 30 t)
 '(org-agenda-files (quote ("~/.org/todo.dev.org" "~/.org/todo.finance.org" "~/.org/todo.org")))
 '(show-paren-mode t)
 '(size-indication-mode t)
 '(user-full-name "Andreas Marschke")
 '(user-mail-address "andreas.marschke@googlemail.com")
 '(whitespace-global-mode nil)
 '(whitespace-modes (quote (awk-mode)))
 '(whitespace-silent t)
 '(kde-email "andreas.marschke@gmail.com")
 '(kde-full-name "Andreas Marschke"))
(server-start)
(put 'upcase-region 'disabled nil)
(put 'downcase-region 'disabled nil)

(dolist (m '(menu-bar-mode tool-bar-mode scroll-bar-mode blink-cursor-mode))
  (if (boundp m)
      (funcall m -1)))

(add-hook 'newsticker-select-item-hook 'newstickeritem)
(uptime-init)

(custom-set-faces
  ;; custom-set-faces was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
)

